/* tslint:disable */
/* eslint-disable */
/**
 * 10x Project API
 * API specification for the 10x Project monorepo with authentication and role-based access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetStatus200Response
 */
export interface GetStatus200Response {
    /**
     * HTTP status code
     * @type {number}
     * @memberof GetStatus200Response
     */
    code: number;
    /**
     * Status message
     * @type {string}
     * @memberof GetStatus200Response
     */
    status: string;
    /**
     * Git commit hash
     * @type {string}
     * @memberof GetStatus200Response
     */
    commit: string;
}

/**
 * Check if a given object implements the GetStatus200Response interface.
 */
export function instanceOfGetStatus200Response(value: object): value is GetStatus200Response {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('commit' in value) || value['commit'] === undefined) return false;
    return true;
}

export function GetStatus200ResponseFromJSON(json: any): GetStatus200Response {
    return GetStatus200ResponseFromJSONTyped(json, false);
}

export function GetStatus200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStatus200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'status': json['status'],
        'commit': json['commit'],
    };
}

export function GetStatus200ResponseToJSON(json: any): GetStatus200Response {
    return GetStatus200ResponseToJSONTyped(json, false);
}

export function GetStatus200ResponseToJSONTyped(value?: GetStatus200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'status': value['status'],
        'commit': value['commit'],
    };
}

