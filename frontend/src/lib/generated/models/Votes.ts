/* tslint:disable */
/* eslint-disable */
/**
 * 10x Project API
 * API specification for the 10x Project monorepo with authentication and role-based access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Votes
 */
export interface Votes {
    /**
     * Number of votes for
     * @type {number}
     * @memberof Votes
     */
    votesFor: number;
    /**
     * Number of votes against
     * @type {number}
     * @memberof Votes
     */
    against: number;
    /**
     * Number of abstain votes
     * @type {number}
     * @memberof Votes
     */
    abstain: number;
}

/**
 * Check if a given object implements the Votes interface.
 */
export function instanceOfVotes(value: object): value is Votes {
    if (!('votesFor' in value) || value['votesFor'] === undefined) return false;
    if (!('against' in value) || value['against'] === undefined) return false;
    if (!('abstain' in value) || value['abstain'] === undefined) return false;
    return true;
}

export function VotesFromJSON(json: any): Votes {
    return VotesFromJSONTyped(json, false);
}

export function VotesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Votes {
    if (json == null) {
        return json;
    }
    return {
        
        'votesFor': json['votesFor'],
        'against': json['against'],
        'abstain': json['abstain'],
    };
}

export function VotesToJSON(json: any): Votes {
    return VotesToJSONTyped(json, false);
}

export function VotesToJSONTyped(value?: Votes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'votesFor': value['votesFor'],
        'against': value['against'],
        'abstain': value['abstain'],
    };
}

