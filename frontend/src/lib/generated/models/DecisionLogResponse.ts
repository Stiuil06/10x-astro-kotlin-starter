/* tslint:disable */
/* eslint-disable */
/**
 * 10x Project API
 * API specification for the 10x Project monorepo with authentication and role-based access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pageable } from './Pageable';
import {
    PageableFromJSON,
    PageableFromJSONTyped,
    PageableToJSON,
    PageableToJSONTyped,
} from './Pageable';
import type { Decision } from './Decision';
import {
    DecisionFromJSON,
    DecisionFromJSONTyped,
    DecisionToJSON,
    DecisionToJSONTyped,
} from './Decision';

/**
 * 
 * @export
 * @interface DecisionLogResponse
 */
export interface DecisionLogResponse {
    /**
     * 
     * @type {Array<Decision>}
     * @memberof DecisionLogResponse
     */
    content: Array<Decision>;
    /**
     * 
     * @type {Pageable}
     * @memberof DecisionLogResponse
     */
    pageable?: Pageable;
    /**
     * Total number of elements
     * @type {number}
     * @memberof DecisionLogResponse
     */
    totalElements: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof DecisionLogResponse
     */
    totalPages: number;
    /**
     * Page size
     * @type {number}
     * @memberof DecisionLogResponse
     */
    size: number;
    /**
     * Current page number
     * @type {number}
     * @memberof DecisionLogResponse
     */
    number: number;
    /**
     * Is first page
     * @type {boolean}
     * @memberof DecisionLogResponse
     */
    first: boolean;
    /**
     * Is last page
     * @type {boolean}
     * @memberof DecisionLogResponse
     */
    last: boolean;
    /**
     * Number of elements in current page
     * @type {number}
     * @memberof DecisionLogResponse
     */
    numberOfElements: number;
}

/**
 * Check if a given object implements the DecisionLogResponse interface.
 */
export function instanceOfDecisionLogResponse(value: object): value is DecisionLogResponse {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('totalElements' in value) || value['totalElements'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('first' in value) || value['first'] === undefined) return false;
    if (!('last' in value) || value['last'] === undefined) return false;
    if (!('numberOfElements' in value) || value['numberOfElements'] === undefined) return false;
    return true;
}

export function DecisionLogResponseFromJSON(json: any): DecisionLogResponse {
    return DecisionLogResponseFromJSONTyped(json, false);
}

export function DecisionLogResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DecisionLogResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'content': ((json['content'] as Array<any>).map(DecisionFromJSON)),
        'pageable': json['pageable'] == null ? undefined : PageableFromJSON(json['pageable']),
        'totalElements': json['totalElements'],
        'totalPages': json['totalPages'],
        'size': json['size'],
        'number': json['number'],
        'first': json['first'],
        'last': json['last'],
        'numberOfElements': json['numberOfElements'],
    };
}

export function DecisionLogResponseToJSON(json: any): DecisionLogResponse {
    return DecisionLogResponseToJSONTyped(json, false);
}

export function DecisionLogResponseToJSONTyped(value?: DecisionLogResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': ((value['content'] as Array<any>).map(DecisionToJSON)),
        'pageable': PageableToJSON(value['pageable']),
        'totalElements': value['totalElements'],
        'totalPages': value['totalPages'],
        'size': value['size'],
        'number': value['number'],
        'first': value['first'],
        'last': value['last'],
        'numberOfElements': value['numberOfElements'],
    };
}

