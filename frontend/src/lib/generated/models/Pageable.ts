/* tslint:disable */
/* eslint-disable */
/**
 * 10x Project API
 * API specification for the 10x Project monorepo with authentication and role-based access
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Sort } from './Sort';
import {
    SortFromJSON,
    SortFromJSONTyped,
    SortToJSON,
    SortToJSONTyped,
} from './Sort';

/**
 * 
 * @export
 * @interface Pageable
 */
export interface Pageable {
    /**
     * 
     * @type {Sort}
     * @memberof Pageable
     */
    sort?: Sort;
    /**
     * Page number
     * @type {number}
     * @memberof Pageable
     */
    pageNumber?: number;
    /**
     * Page size
     * @type {number}
     * @memberof Pageable
     */
    pageSize?: number;
    /**
     * Offset
     * @type {number}
     * @memberof Pageable
     */
    offset?: number;
    /**
     * Is paged
     * @type {boolean}
     * @memberof Pageable
     */
    paged?: boolean;
    /**
     * Is unpaged
     * @type {boolean}
     * @memberof Pageable
     */
    unpaged?: boolean;
}

/**
 * Check if a given object implements the Pageable interface.
 */
export function instanceOfPageable(value: object): value is Pageable {
    return true;
}

export function PageableFromJSON(json: any): Pageable {
    return PageableFromJSONTyped(json, false);
}

export function PageableFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pageable {
    if (json == null) {
        return json;
    }
    return {
        
        'sort': json['sort'] == null ? undefined : SortFromJSON(json['sort']),
        'pageNumber': json['pageNumber'] == null ? undefined : json['pageNumber'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'paged': json['paged'] == null ? undefined : json['paged'],
        'unpaged': json['unpaged'] == null ? undefined : json['unpaged'],
    };
}

export function PageableToJSON(json: any): Pageable {
    return PageableToJSONTyped(json, false);
}

export function PageableToJSONTyped(value?: Pageable | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sort': SortToJSON(value['sort']),
        'pageNumber': value['pageNumber'],
        'pageSize': value['pageSize'],
        'offset': value['offset'],
        'paged': value['paged'],
        'unpaged': value['unpaged'],
    };
}

